{"version":3,"file":"static/js/387.5df6c10d.chunk.js","mappings":"yPAEaA,EAAUC,EAAAA,GAAAA,QAAH,mJACF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAA8B,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,KAAnB,IAEtCC,EAAON,EAAAA,GAAAA,GAAH,sBACJO,EAAOP,EAAAA,GAAAA,GAAH,8EAEI,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGTK,EAASR,EAAAA,GAAAA,GAAH,+CACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEPM,EAAOT,EAAAA,GAAAA,EAAH,sBACJU,EAAOV,EAAAA,GAAAA,KAAH,uCACN,SAAAC,GAAC,OAAIA,EAAEC,MAAME,OAAOC,KAAnB,I,SCfG,SAASM,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,KAAKH,EAChC,GAAE,CAACJ,KAGF,SAACb,EAAD,UACsB,IAAnBgB,EAAQK,QACP,uEAEA,SAACd,EAAD,UACGS,EAAQM,KAAI,SAAAC,GAAM,OACjB,UAACf,EAAD,YACE,UAACC,EAAD,YACE,SAACE,EAAD,sBADF,IACwBY,EAAOC,WAE/B,SAACd,EAAD,UAAOa,EAAOE,YAJLF,EAAOG,GADD,OAY5B,C,8LC7BKC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACcC,EAAAA,GAAAA,IAAA,mEAC2CF,IAFzD,cACCG,EADD,gBAIgBA,EAAKC,KAAKC,QAJ1B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACcN,EAAAA,GAAAA,IAAA,4DACoCF,EADpC,kBACqDQ,IAFnE,cACCL,EADD,gBAIgBA,EAAKC,KAAKC,QAJ1B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BV,GAA7B,yFACcG,EAAAA,GAAAA,IAAA,6CACqBH,EADrB,oBACmCC,EADnC,oBADd,cACCG,EADD,gBAIgBA,EAAKC,KAJrB,cAICE,EAJD,yBAKEA,GALF,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA6BX,GAA7B,yFACcG,EAAAA,GAAAA,IAAA,6CACqBH,EADrB,4BAC2CC,EAD3C,oBADd,cACCG,EADD,gBAIgBA,EAAKC,KAAKO,KAJ1B,cAICL,EAJD,yBAKEA,GALF,kEAQA,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAAgCO,GAAhC,yFACcG,EAAAA,GAAAA,IAAA,6CACqBH,EADrB,4BAC2CC,EAD3C,oBADd,cACCG,EADD,gBAIgBA,EAAKC,KAAKC,QAJ1B,cAICC,EAJD,yBAKEA,GALF,kE","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  padding-left: ${p => p.theme.space[5]};\n  padding-right: ${p => p.theme.space[5]};\n  padding-top: ${p => p.theme.space[5]};\n  padding-bottom: ${p => p.theme.space[5]};\n  border-bottom: ${p => p.theme.space[1]} solid ${p => p.theme.colors.hover};\n`;\nexport const List = styled.ul``;\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[4]};\n  }\n`;\nexport const Author = styled.h4`\n  margin-bottom: ${p => p.theme.space[3]};\n`;\nexport const Text = styled.p``;\nexport const Span = styled.span`\n  color: ${p => p.theme.colors.hover};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from 'services/movies-api';\nimport { Wrapper, List, Item, Author, Text, Span } from './Reviews.styled';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMoviesReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      {reviews.length === 0 ? (\n        <h3>We don`t have any reviews for this movie!</h3>\n      ) : (\n        <List>\n          {reviews.map(review => (\n            <Item key={review.id}>\n              <Author>\n                <Span>Author:</Span> {review.author}\n              </Author>\n              <Text>{review.content}</Text>\n            </Item>\n          ))}\n        </List>\n      )}\n    </Wrapper>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '1c308592d719c7668d47adc63622f209';\n\nexport async function getTrendingMovies() {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n  );\n  const result = await resp.data.results;\n  return result;\n}\n\nexport async function getMovies(query) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  const result = await resp.data.results;\n  return result;\n}\n\nexport async function getMoviesById(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  const result = await resp.data;\n  return result;\n}\n\nexport async function getMoviesCast(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const result = await resp.data.cast;\n  return result;\n}\n\nexport async function getMoviesReviews(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  const result = await resp.data.results;\n  return result;\n}\n"],"names":["Wrapper","styled","p","theme","space","colors","hover","List","Item","Author","Text","Span","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","getMoviesReviews","then","length","map","review","author","content","id","API_KEY","getTrendingMovies","axios","resp","data","results","result","getMovies","query","getMoviesById","getMoviesCast","cast"],"sourceRoot":""}