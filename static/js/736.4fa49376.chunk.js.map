{"version":3,"file":"static/js/736.4fa49376.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  padding-left: ${p => p.theme.space[5]};\n  padding-right: ${p => p.theme.space[5]};\n  padding-top: ${p => p.theme.space[5]};\n  padding-bottom: ${p => p.theme.space[5]};\n  border-bottom: ${p => p.theme.space[1]} solid ${p => p.theme.colors.hover};\n`;\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  gap: ${p => p.theme.space[4]};\n`;\nexport const Item = styled.li``;\nexport const Image = styled.img`\n  border-radius: ${p => p.theme.space[3]};\n  border: ${p => p.theme.space[1]} solid ${p => p.theme.colors.hover};\n  overflow: hidden;\n  margin-bottom: ${p => p.theme.space[3]};\n  min-width: 250px;\n  max-height: 380px;\n`;\nexport const Name = styled.p``;\nexport const Character = styled.p``;\nexport const Span = styled.span`\n  color: ${p => p.theme.colors.hover};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCast } from 'services/movies-api';\nimport {\n  Wrapper,\n  List,\n  Item,\n  Image,\n  Name,\n  Character,\n  Span,\n} from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [castInfo, setCastInfo] = useState([]);\n\n  useEffect(() => {\n    getMoviesCast(movieId).then(setCastInfo);\n  }, [movieId]);\n\n  const getPicture = picture => {\n    if (picture === null) {\n      return 'https://www.diabetes.ie/wp-content/uploads/2017/02/no-image-available.png';\n    }\n    return `https://image.tmdb.org/t/p/w400${picture}`;\n  };\n\n  return (\n    <Wrapper>\n      <List>\n        {castInfo.map(cast => (\n          <Item key={cast.id}>\n            <Image\n              src={getPicture(cast.profile_path)}\n              alt={cast.original_name}\n            />\n            <Name>{cast.original_name}</Name>\n            <Character>\n              <Span>Character:</Span> {cast.character}\n            </Character>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '1c308592d719c7668d47adc63622f209';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const resp = await axios.get(\n    `${baseURL}trending/movie/week?api_key=${API_KEY}`\n  );\n  const result = await resp.data.results;\n  return result;\n}\n\nexport async function getMovies(query) {\n  // const searchParams = {\n  //   api_key: API_KEY,\n  //   query: query,\n  // };\n  const obj = {\n    method: 'get',\n    url: `${baseURL}search/movie`,\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  };\n\n  // const resp = await axios.get(\n  //   `${baseURL}search/movie?api_key=${API_KEY}&query=${query}`\n  // );\n  const resp = await axios(obj);\n  const result = await resp.data.results;\n  return result;\n}\n\nexport async function getMoviesById(id) {\n  const resp = await axios.get(`${baseURL}movie/${id}?api_key=${API_KEY}`);\n  const result = await resp.data;\n  return result;\n}\n\nexport async function getMoviesCast(id) {\n  const resp = await axios.get(\n    `${baseURL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  const result = await resp.data.cast;\n  return result;\n}\n\nexport async function getMoviesReviews(id) {\n  const resp = await axios.get(\n    `${baseURL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  const result = await resp.data.results;\n  return result;\n}\n"],"names":["Wrapper","styled","p","theme","space","colors","hover","List","Item","Image","Name","Character","Span","Cast","movieId","useParams","useState","castInfo","setCastInfo","useEffect","getMoviesCast","then","map","cast","src","picture","profile_path","alt","original_name","character","id","API_KEY","baseURL","getTrendingMovies","axios","resp","data","results","result","getMovies","query","obj","method","url","params","api_key","getMoviesById","getMoviesReviews"],"sourceRoot":""}